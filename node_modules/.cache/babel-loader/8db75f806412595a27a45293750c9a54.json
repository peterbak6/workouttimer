{"ast":null,"code":"var _jsxFileName = \"/Users/peterbak/Documents/GitHub/workouttimer/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport './App.css';\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // We need ref in this, because we are dealing\n  // with JS setInterval to keep track of it and\n  // stop it when needed\n  const Ref = useRef(null); // The state for our timer\n\n  const [timer, setTimer] = useState('00:00:00');\n\n  const getTimeRemaining = e => {\n    const total = Date.parse(e) - Date.parse(new Date());\n    const seconds = Math.floor(total / 1000 % 60);\n    const minutes = Math.floor(total / 1000 / 60 % 60);\n    const hours = Math.floor(total / 1000 / 60 / 60 % 24);\n    return {\n      total,\n      hours,\n      minutes,\n      seconds\n    };\n  };\n\n  const startTimer = e => {\n    let {\n      total,\n      hours,\n      minutes,\n      seconds\n    } = getTimeRemaining(e);\n\n    if (total >= 0) {\n      // update the timer\n      // check if less than 10 then we need to \n      // add '0' at the beginning of the variable\n      setTimer((hours > 9 ? hours : '0' + hours) + ':' + (minutes > 9 ? minutes : '0' + minutes) + ':' + (seconds > 9 ? seconds : '0' + seconds));\n    }\n  };\n\n  const clearTimer = e => {\n    // setTimer('00:00:00');\n    debugger;\n    if (Ref.current) clearInterval(Ref.current);\n    const id = setInterval(() => {\n      startTimer(e);\n    }, 1000);\n    Ref.current = id;\n  };\n\n  const getDeadTime = () => {\n    let deadline = new Date();\n    deadline.setSeconds(deadline.getSeconds() + 70);\n    return deadline;\n  };\n\n  useEffect(() => {\n    clearTimer(getDeadTime());\n  }, []);\n\n  const onClickReset = () => {\n    clearTimer(getDeadTime());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: timer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClickReset,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 7\n  }, this);\n};\n\n_s(App, \"HPeaHJ9UVwlp0EkypzcTPI/d1Lw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","React","useState","useRef","useEffect","App","Ref","timer","setTimer","getTimeRemaining","e","total","Date","parse","seconds","Math","floor","minutes","hours","startTimer","clearTimer","current","clearInterval","id","setInterval","getDeadTime","deadline","setSeconds","getSeconds","onClickReset"],"sources":["/Users/peterbak/Documents/GitHub/workouttimer/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React, { useState, useRef, useEffect } from 'react'\n\nconst App = () => {\n  \n  // We need ref in this, because we are dealing\n  // with JS setInterval to keep track of it and\n  // stop it when needed\n  const Ref = useRef(null);\n\n  // The state for our timer\n  const [timer, setTimer] = useState('00:00:00');\n\n\n  const getTimeRemaining = (e) => {\n      const total = Date.parse(e) - Date.parse(new Date());\n      const seconds = Math.floor((total / 1000) % 60);\n      const minutes = Math.floor((total / 1000 / 60) % 60);\n      const hours = Math.floor((total / 1000 / 60 / 60) % 24);\n      return {\n          total, hours, minutes, seconds\n      };\n  }\n\n\n  const startTimer = (e) => {\n      let { total, hours, minutes, seconds } \n                  = getTimeRemaining(e);\n      if (total >= 0) {\n\n          // update the timer\n          // check if less than 10 then we need to \n          // add '0' at the beginning of the variable\n          setTimer(\n              (hours > 9 ? hours : '0' + hours) + ':' +\n              (minutes > 9 ? minutes : '0' + minutes) + ':'\n              + (seconds > 9 ? seconds : '0' + seconds)\n          )\n      }\n  }\n\n\n  const clearTimer = (e) => {\n \n      // setTimer('00:00:00');\n    debugger;\n      if (Ref.current) clearInterval(Ref.current);\n      const id = setInterval(() => {\n          startTimer(e);\n      }, 1000)\n      Ref.current = id;\n  }\n\n  const getDeadTime = () => {\n      let deadline = new Date();\n      deadline.setSeconds(deadline.getSeconds() + 70);\n      return deadline;\n  }\n\n  useEffect(() => {\n      clearTimer(getDeadTime());\n  }, []);\n\n  const onClickReset = () => {\n      clearTimer(getDeadTime());\n  }\n\n  return (\n      <div className=\"App\">\n          <h1>{timer}</h1>\n          <button onClick={onClickReset}>Reset</button>\n      </div>\n  )\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAEhB;EACA;EACA;EACA,MAAMC,GAAG,GAAGH,MAAM,CAAC,IAAD,CAAlB,CALgB,CAOhB;;EACA,MAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,UAAD,CAAlC;;EAGA,MAAMO,gBAAgB,GAAIC,CAAD,IAAO;IAC5B,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWH,CAAX,IAAgBE,IAAI,CAACC,KAAL,CAAW,IAAID,IAAJ,EAAX,CAA9B;IACA,MAAME,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAYL,KAAK,GAAG,IAAT,GAAiB,EAA5B,CAAhB;IACA,MAAMM,OAAO,GAAGF,IAAI,CAACC,KAAL,CAAYL,KAAK,GAAG,IAAR,GAAe,EAAhB,GAAsB,EAAjC,CAAhB;IACA,MAAMO,KAAK,GAAGH,IAAI,CAACC,KAAL,CAAYL,KAAK,GAAG,IAAR,GAAe,EAAf,GAAoB,EAArB,GAA2B,EAAtC,CAAd;IACA,OAAO;MACHA,KADG;MACIO,KADJ;MACWD,OADX;MACoBH;IADpB,CAAP;EAGH,CARD;;EAWA,MAAMK,UAAU,GAAIT,CAAD,IAAO;IACtB,IAAI;MAAEC,KAAF;MAASO,KAAT;MAAgBD,OAAhB;MAAyBH;IAAzB,IACUL,gBAAgB,CAACC,CAAD,CAD9B;;IAEA,IAAIC,KAAK,IAAI,CAAb,EAAgB;MAEZ;MACA;MACA;MACAH,QAAQ,CACJ,CAACU,KAAK,GAAG,CAAR,GAAYA,KAAZ,GAAoB,MAAMA,KAA3B,IAAoC,GAApC,IACCD,OAAO,GAAG,CAAV,GAAcA,OAAd,GAAwB,MAAMA,OAD/B,IAC0C,GAD1C,IAEGH,OAAO,GAAG,CAAV,GAAcA,OAAd,GAAwB,MAAMA,OAFjC,CADI,CAAR;IAKH;EACJ,CAdD;;EAiBA,MAAMM,UAAU,GAAIV,CAAD,IAAO;IAEtB;IACF;IACE,IAAIJ,GAAG,CAACe,OAAR,EAAiBC,aAAa,CAAChB,GAAG,CAACe,OAAL,CAAb;IACjB,MAAME,EAAE,GAAGC,WAAW,CAAC,MAAM;MACzBL,UAAU,CAACT,CAAD,CAAV;IACH,CAFqB,EAEnB,IAFmB,CAAtB;IAGAJ,GAAG,CAACe,OAAJ,GAAcE,EAAd;EACH,CATD;;EAWA,MAAME,WAAW,GAAG,MAAM;IACtB,IAAIC,QAAQ,GAAG,IAAId,IAAJ,EAAf;IACAc,QAAQ,CAACC,UAAT,CAAoBD,QAAQ,CAACE,UAAT,KAAwB,EAA5C;IACA,OAAOF,QAAP;EACH,CAJD;;EAMAtB,SAAS,CAAC,MAAM;IACZgB,UAAU,CAACK,WAAW,EAAZ,CAAV;EACH,CAFQ,EAEN,EAFM,CAAT;;EAIA,MAAMI,YAAY,GAAG,MAAM;IACvBT,UAAU,CAACK,WAAW,EAAZ,CAAV;EACH,CAFD;;EAIA,oBACI;IAAK,SAAS,EAAC,KAAf;IAAA,wBACI;MAAA,UAAKlB;IAAL;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAQ,OAAO,EAAEsB,YAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAMD,CAtED;;GAAMxB,G;;KAAAA,G;AAwEN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}